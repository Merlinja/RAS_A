//==========================================================================================
//
//	Time Node
//
//	Overview: Component of internal clocks, it holds the records of active neurons during
//		the cycle associated with the time node.
//
//==========================================================================================
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//==========================================================================================
//
//	[START] Includes, Packages, Headers
//
//------------------------------------------------------------------------------------------

// Package
package RASA;

// Includes

//------------------------------------------------------------------------------------------
//
//	[END] Includes, Packages, Headers
//
//==========================================================================================
//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//==========================================================================================
//
//	[START] Time_Node Class
//
//------------------------------------------------------------------------------------------

public class Time_Node {

	//=====================================================================
	//
	// CLASS FIELDS
	//
	//---------------------------------------------------------------------
	
	public int Time;
	public Internal_Clock Parent_IC;
	
	// List
	public Time_Node Next;
	public Time_Node Prev;
	
	//=====================================================================
	//
	// CLASS METHODS
	//
	//---------------------------------------------------------------------
	
	public Time_Node(int Creation_Time, Internal_Clock IC) {
		// TODO Auto-generated constructor stub
		Time = Creation_Time;
		Next = null;
		Prev = null;
		Parent_IC = IC;
	}

	
	//==========================================
	// Reports
	//------------------------------------------
	
	public void Print_Report(String Tags) {

		// Header + full info
		if ((!Tags.contains("SHORT") || Tags.contains("FULL"))
				&& !Tags.contains("HIDE_TN")) {
			// Print border
			Print_Header();
			System.out.print("========================================");
			Print_Header();
			System.out.print(" Printing Time Node: " + Time);
			Print_Header();
			System.out.print("----------------------------------------");

			// Print attributes

		}
	}

	public void Print_Label() {
		System.out.print("[" + Time + "]");
	}

	public void Print_Header() {
		System.out.println("");
		Print_Label();
	}

	//==========================================
	// Time Values
	//------------------------------------------
	
	public int Actual_Time() {
		return Time;
	}
	
}

//------------------------------------------------------------------------------------------
//
//	[END] Time_Node Class
//
//==========================================================================================