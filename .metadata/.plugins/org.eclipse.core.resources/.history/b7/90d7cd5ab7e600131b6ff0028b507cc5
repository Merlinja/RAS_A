//==========================================================================================
//
//	Synapse
//
//	Overview: The "If then" the association between two neurons.
//		If one neuron is active how likely is it that another should be active?
//
//==========================================================================================
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//==========================================================================================
//
//	[START] Includes, Packages, Headers
//
//------------------------------------------------------------------------------------------

// Package
package RASA;

//Includes

//------------------------------------------------------------------------------------------
//
//	[END] Includes, Packages, Headers
//
//==========================================================================================
//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//==========================================================================================
//
//	[START] Synapse Class
//
//------------------------------------------------------------------------------------------

public class Synapse {

	//=====================================================================
	//
	// CLASS FIELDS
	//
	//---------------------------------------------------------------------
	
	Neuron To;
	Neuron From;
	public Neural_Network NN;
	
	//=====================================================================
	//
	// CLASS METHODS
	//
	//---------------------------------------------------------------------
	
	public Synapse() {
		// Initialize variables
		To = null;
		From = null;
		NN = null;
	}
	
	public Synapse(Neuron N_To, Neuron N_From) {
		// Initialize variables
		To = N_To;
		From = N_From;
		NN = N_From.Parent_NN();
	}

	//==========================================
	// Reports
	//------------------------------------------
	
	public void Print_Report(String Tags) {

		From.Print_Header();
		System.out.print(" --> ");
		To.Print_Header();
	}

	/*
	public void Print_Label() {
		System.out.print("[N:" + ID + "]");
	}

	public void Print_Header() {
		From.Print_Header();
		Print_Label();
	}
	*/
}

//------------------------------------------------------------------------------------------
//
//	[END] Synapse Class
//
//==========================================================================================